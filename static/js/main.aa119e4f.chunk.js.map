{"version":3,"sources":["sounds/click1.wav","sounds/click2.wav","templates/header.jsx","templates/form.jsx","templates/main_container.jsx","templates/footer.jsx","templates/metronome.jsx","templates/tuner.jsx","templates/chords.jsx","templates/songs.jsx","templates/notes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","entries","page_name","url","id","className","this","map","entry","key","exact","activeClassName","to","React","Component","MyForm","state","email","question","event","preventDefault","console","log","setState","target","name","value","onSubmit","htmlFor","type","placeholder","onChange","e","handleChange","rows","Main","fetch","then","resp","json","body","Tag","class","text","Footer","Metronome","handleBpmChange","bpm","playing","clearInterval","timer","setInterval","playClick","count","startStop","beatsPerMeasure","click2","play","click1","Audio","min","max","onClick","Tuner","src","width","height","display","position","frameBorder","href","rel","Chords","chords","tag","alt","Songs","songs","Notes","notes","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aa119e4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click1.7a7930a2.wav\";","module.exports = __webpack_public_path__ + \"static/media/click2.fe0ded65.wav\";","import React from 'react';\nimport '../styles/colors.css';\nimport '../styles/main.css';\nimport '../styles/header_and_footer.css';\nimport {NavLink} from 'react-router-dom';\n\nexport default class Header extends React.Component {\n    entries = [\n        {\n            page_name: \"Main page\",\n            url: \"/\",\n            id: 1\n        },\n        {\n            page_name: \"Main chords\",\n            url: \"/chords\",\n            id: 2\n        },\n        {\n            page_name: \"Tuner\",\n            url: \"/tuner\",\n            id: 3\n        },\n        {\n            page_name: \"Metronome\",\n            url: \"/metronome\",\n            id: 4\n        },\n        {\n            page_name: \"Easy songs\",\n            url: \"/songs\",\n            id: 5\n        },\n        {\n            page_name: \"Notes\",\n            url: \"/notes\",\n            id: 6\n        }\n    ]\n\n    render() {\n        return (\n            <div className=\"page-header\">\n                <ul className=\"header-menu\">\n                    {this.entries.map((entry) => (\n                        <li key={entry.id}><NavLink exact activeClassName=\"menu-active\"\n                                                    to={entry.url}>{entry.page_name}</NavLink></li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nexport default class MyForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            question: \"\"\n        }\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        console.log(this.state, event);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <form onSubmit={event => this.onSubmit(event)}>\n                <label htmlFor=\"email\" className=\"header-element\">Have questions? Contact us!</label>\n                <input name=\"email\" type=\"email\" placeholder=\"Your email\" value={this.state.email}\n                       onChange={e => this.handleChange(e)}/>\n                <textarea name=\"question\" rows=\"4\" placeholder=\"Your question\" value={this.state.question}\n                          onChange={e => this.handleChange(e)}/>\n                <input type=\"submit\" value=\"Send a question\"/>\n            </form>\n        )\n    }\n}","import React from 'react';\nimport '../styles/colors.css';\nimport '../styles/header_and_footer.css';\nimport MyForm from \"./form\";\n\nexport default class Main extends React.Component {\n    state = {\n        entries: []\n    }\n\n    componentDidMount() {\n        fetch('/main_page').then(resp => {\n            return resp.json();\n        }).then(body => {\n            this.setState({\n                entries: body\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"body-page-element\">\n                {this.state.entries.map((entry) => {\n                    const Tag = entry.type;\n                    return <div><Tag className={entry.class}>{entry.text}</Tag></div>\n                })}\n                <div className=\"main-element\">\n                    <MyForm/>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport '../styles/colors.css';\nimport '../styles/header_and_footer.css';\n\nexport default class Footer extends React.Component {\n\n    render() {\n        return (\n            <div className=\"page-footer\">\n                <span>Made by Morhunenko Mykola</span>\n            </div>\n        )\n    }\n}","// main part is from here https://daveceddia.com/react-practice-projects/\n// https://codesandbox.io/s/9oy853m8xy?file=/src/App.js:42-88\n\nimport React, {Component} from 'react'\nimport '../styles/metronome.scss'\nimport '../styles/main.css'\nimport click1 from '../sounds/click1.wav'\nimport click2 from '../sounds/click2.wav'\n\nexport default class Metronome extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playing: false,\n            count: 0,\n            bpm: 100,\n            beatsPerMeasure: 4,\n        }\n        this.click1 = new Audio(click1)\n        this.click2 = new Audio(click2)\n    }\n\n    handleBpmChange = e => {\n        const bpm = e.target.value\n        if (this.state.playing) {\n            clearInterval(this.timer)\n            this.timer = setInterval(this.playClick, (60 / bpm) * 1000)\n\n            this.setState({\n                count: 0,\n                bpm\n            })\n        } else {\n            this.setState({bpm})\n        }\n    }\n\n    startStop = () => {\n        if (this.state.playing) {\n            clearInterval(this.timer)\n            this.setState({\n                playing: false\n            })\n        } else {\n            this.timer = setInterval(\n                this.playClick,\n                (60 / this.state.bpm) * 1000\n            )\n            this.setState(\n                {\n                    count: 0,\n                    playing: true,\n                },\n                this.playClick\n            )\n        }\n    }\n\n    playClick = () => {\n        const {count, beatsPerMeasure} = this.state\n        if (count % beatsPerMeasure === 0) {\n            this.click2.play()\n        } else {\n            this.click1.play()\n        }\n        this.setState(state => ({\n            count: (state.count + 1) % state.beatsPerMeasure\n        }))\n    }\n\n    componentDidMount() {\n        clearInterval(this.timer)\n        this.setState({\n            playing: false\n        })\n    }\n\n    render() {\n        const {playing, bpm} = this.state\n\n        return (\n            <div className='metronome'>\n                <div className='bpm-slider'>\n                    {bpm} BPM\n                    <input\n                        type='range'\n                        min='60'\n                        max='240'\n                        value={bpm}\n                        onChange={this.handleBpmChange}\n                    />\n                </div>\n                <button onClick={this.startStop}>\n                    {playing ? 'Stop' : 'Play'}\n                </button>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport '../styles/colors.css';\nimport '../styles/main.css';\nimport '../styles/header_and_footer.css';\nimport Iframe from 'react-iframe'\n\nexport default class Tuner extends React.Component {\n    render() {\n        return (\n            <div className=\"body-page-element tuner\">\n                <Iframe src=\"/tuner-widget.html\"\n                        width=\"100%\"\n                        height=\"300px\"\n                        className=\"myClassname\"\n                        display=\"initial\"\n                        position=\"relative\"\n                        frameBorder=\"0\"/>\n                <a className=\"a_tuner\" href=\"//www.leshylabs.com/\" rel=\"nofollow\">Created by Leshy Labs LLC</a>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport '../styles/colors.css';\nimport '../styles/main.css';\nimport '../styles/header_and_footer.css';\n// import '../img/chords/E-major.jpg'\n\nexport default class Chords extends React.Component {\n    state = {\n        chords: []\n    }\n\n    componentDidMount() {\n        fetch('/chords').then(resp => {\n            return resp.json();\n        }).then(body => {\n            this.setState({\n                chords: body\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"body-page-element\">\n                <h1 className=\"header-element\">Guitar chords</h1>\n                <div className=\"main-element\">\n                    <h4 className=\"header-element\"><a\n                        href=\"https://www.libertyparkmusic.com/read-guitar-chord-diagrams/\" target=\"_blank\"\n                        rel=\"noopener noreferrer\">Source</a></h4>\n\n                    {this.state.chords.map((entry) => {\n                        const Tag = entry.tag;\n                        if (entry.src) {\n                            return <img src={entry.src} className=\"chords-img\" alt=\"Sorry...\"/>\n                        }\n                        return <Tag className={entry.class}>{entry.body}</Tag>\n                    })}\n                </div>\n            </div>\n\n        )\n    }\n}","import React from 'react';\nimport '../styles/colors.css';\nimport '../styles/main.css';\nimport '../styles/header_and_footer.css';\n\nexport default class Songs extends React.Component {\n    state = {\n        songs: []\n    }\n\n    componentDidMount() {\n        fetch('/songs').then(resp => {\n            return resp.json();\n        }).then(body => {\n            this.setState({\n                songs: body\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"body-page-element\">\n                <h1 className=\"header-element\">The easiest songs for beginners</h1>\n                <div className=\"main-element\">\n                    {this.state.songs.map((entry) => {\n                        const Tag = entry.tag;\n                        if (entry.src) {\n                            return <img src={entry.src} className=\"chords-img\" alt=\"Sorry...\"/>\n                        }\n                        return <Tag className={entry.class}>{entry.body}</Tag>\n                    })}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport '../styles/colors.css';\nimport '../styles/main.css';\nimport '../styles/header_and_footer.css';\n\nexport default class Notes extends React.Component {\n    state = {\n        notes: []\n    }\n\n    componentDidMount() {\n        fetch('/notes').then(resp => {\n            return resp.json();\n        }).then(body => {\n            this.setState({\n                notes: body\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"body-page-element\">\n                <h1 className=\"header-element\">Learn The Notes On The Guitar</h1>\n                <div className=\"main-element\">\n                    <h4 className=\"header-element\"><a\n                        href=\"https://www.leadguitarlessons.com/guitar-lessons/general/learn-the-notes-on-the-guitar.htm\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\">Source</a></h4>\n                    {this.state.notes.map((entry) => {\n                        const Tag = entry.tag;\n                        if (entry.src) {\n                            return <img src={entry.src} className=\"chords-img\" alt=\"Sorry...\"/>\n                        }\n                        return <Tag className={entry.class}>{entry.body}</Tag>\n                    })}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './styles/colors.css';\n\nimport Header from './templates/header'\nimport Main from './templates/main_container'\nimport Footer from './templates/footer'\nimport Metronome from \"./templates/metronome\";\nimport Tuner from \"./templates/tuner\";\nimport Chords from \"./templates/chords\";\nimport Songs from \"./templates/songs\";\nimport Notes from \"./templates/notes\";\n\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Header/>\n                <Switch>\n                    <Route path=\"/metronome\" component={Metronome}/>\n                    <Route path=\"/tuner\" component={Tuner}/>\n                    <Route path=\"/chords\" component={Chords}/>\n                    <Route path=\"/notes\" component={Notes}/>\n                    <Route path=\"/songs\" component={Songs}/>\n                    <Route exact path=\"/\" component={Main}/>\n                </Switch>\n                <Footer/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}